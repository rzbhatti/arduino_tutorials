#include <Arduino.h>
#include <U8g2lib.h>
#include <Wire.h>

U8G2_SH1106_128X64_NONAME_1_HW_I2C oled(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);


const int pinIRd = 10;
const int pinIRa = A0;

int IRvalueA = 0;
int IRvalueD = 0;


// 'open-mouth-smiling', 44x44px
static const unsigned char happy [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x3e, 0x00, 0x00, 
	0x00, 0x0f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x30, 0x00, 0x00, 
	0xc0, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x70, 0x00, 0x01, 0xc0, 
	0xe0, 0x70, 0x38, 0x00, 0x01, 0x81, 0xe0, 0xf0, 0x18, 0x00, 0x03, 0x81, 0xf0, 0xf8, 0x1c, 0x00, 
	0x03, 0x01, 0xf0, 0xf8, 0x0c, 0x00, 0x03, 0x01, 0xf0, 0xf8, 0x0c, 0x00, 0x07, 0x01, 0xf0, 0xf8, 
	0x0e, 0x00, 0x06, 0x01, 0xf0, 0xf8, 0x06, 0x00, 0x06, 0x00, 0xe0, 0x70, 0x06, 0x00, 0x06, 0x00, 
	0xe0, 0x70, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 
	0x06, 0x08, 0x00, 0x01, 0x06, 0x00, 0x07, 0x1f, 0xff, 0xff, 0x8e, 0x00, 0x03, 0x1f, 0xff, 0xff, 
	0x8c, 0x00, 0x03, 0x0f, 0xff, 0xff, 0x0c, 0x00, 0x03, 0x8f, 0xff, 0xff, 0x0c, 0x00, 0x01, 0x87, 
	0xff, 0xfe, 0x18, 0x00, 0x01, 0xc3, 0xff, 0xfc, 0x38, 0x00, 0x00, 0xe1, 0xff, 0xf8, 0x30, 0x00, 
	0x00, 0x60, 0xff, 0xf0, 0x60, 0x00, 0x00, 0x30, 0x1f, 0xc0, 0xc0, 0x00, 0x00, 0x3c, 0x00, 0x03, 
	0xc0, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x3e, 0x00, 0x00, 0x00, 0x01, 
	0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'scared', 44x44px
static const unsigned char scared [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x1c, 0x00, 0x00, 
	0x00, 0x0e, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x03, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00, 
	0xc0, 0x00, 0x00, 0x60, 0x60, 0x30, 0x60, 0x00, 0x00, 0xc0, 0xe0, 0x30, 0x30, 0x00, 0x00, 0xc7, 
	0xc0, 0x1f, 0x30, 0x00, 0x01, 0x8f, 0x00, 0x0f, 0x18, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 
	0x03, 0x01, 0xc0, 0x3c, 0x0c, 0x00, 0x03, 0x03, 0xe0, 0x7c, 0x04, 0x00, 0x06, 0x06, 0x60, 0x66, 
	0x06, 0x00, 0x06, 0x06, 0x60, 0x66, 0x06, 0x00, 0x06, 0x03, 0xe0, 0x7c, 0x06, 0x00, 0x06, 0x01, 
	0xc0, 0x38, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 
	0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x02, 0x00, 0x3f, 0xc0, 
	0x04, 0x00, 0x03, 0x00, 0x70, 0xf0, 0x0c, 0x00, 0x03, 0x00, 0xc0, 0x30, 0x0c, 0x00, 0x01, 0x81, 
	0x8f, 0x18, 0x18, 0x00, 0x00, 0xc1, 0xff, 0xf8, 0x38, 0x00, 0x00, 0xc1, 0xe0, 0x78, 0x30, 0x00, 
	0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x30, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x1c, 0x00, 0x03, 
	0x80, 0x00, 0x00, 0x0e, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x80, 0x1e, 0x00, 0x00, 0x00, 0x01, 
	0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup()
{
oled.begin();
oled.setFontMode(1);				// write solid glyphs
// oled.setFont(u8g_font_profont12);
oled.setFont(u8g2_font_ncenB14_tr);
// oled.clearBuffer();
// oled.sendBuffer();
}

void loop(void) {
  IRvalueA = analogRead(pinIRa);
  IRvalueD = digitalRead(pinIRd);

  if (IRvalueD == HIGH) {

    oled.firstPage();  
    do {
      oled.setCursor(50, 15);
      oled.print(IRvalueA);
      oled.setBitmapMode(false /* transparent*/);
      oled.drawBitmap( 42, 20, 44 / 8 , 44, happy); 
    } while( oled.nextPage() );
  }
  else {
    oled.firstPage();  
    do {
      oled.setCursor(50, 15);
      oled.print(IRvalueA);
      oled.setBitmapMode(false /* transparent*/);
      oled.drawBitmap( 42, 20, 44 / 8, 44, scared);   
    } while( oled.nextPage() );
  }

  delay(50);
}